version: "3"
services:
  grafana:
    build: 
      context: './grafana/'
    container_name: grafana
    #image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - ./grafana/data:/home/grafana/data:rw
      - ./grafana/conf/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/conf/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/conf/dashboards:/var/lib/grafana/dashboards
      - ./grafana/conf/grafana.ini:/etc/grafana/grafana.ini
    restart: always
    environment:
    #  - GF_INSTALL_PLUGINS=grafana-worldmap-panel
       - GF_PATHS_DATA=/home/grafana/data
    depends_on:   
      - postgres
  postgres:
    build:
      context: './postgres/'
    #image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/init/dbinit.sql:/docker-entrypoint-initdb.d/schema.sql:ro
      - ./postgres/initdata:/tmp:ro
      #- ./postgres/conf/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      #PGDATA: /var/lib/postgresql/data
  cron:
    build: 
      context: './cron/'
    depends_on: 
      - postgres
    volumes:
      - ./cron/schedules.crontab:/schedules.crontab
      - ./cron/load-data.sh:/work/load-data.sh:ro
    restart: always
  after-init:
    build:
      context: './after-init/'
    depends_on: 
      - postgres
      - cron
      - grafana
      - certbot
    restart: on-failure:500
  nginx-https:
    image: nginx:1.17.9
    container_name: nginx-https
    volumes:
      - ./nginx-https/tmpl:/etc/nginx/tmpl
      - ./nginx-https/conf:/etc/nginx/conf.d
      - ./certbot/data/conf:/etc/letsencrypt
    depends_on: 
      - grafana
      - certbot
    environment:
      - NGINX_FQDN=${NGINX_FQDN}
      - HTTPS_COMMON_NAME=${HTTPS_COMMON_NAME}
    command: /bin/bash -c "sleep 60 && envsubst < /etc/nginx/tmpl/grafana.conf.tmpl > /etc/nginx/conf.d/grafana.conf && envsubst < /etc/nginx/tmpl/ssl.conf.tmpl > /etc/nginx/conf.d/ssl.conf && exec nginx -g 'daemon off;'"
    ports:
      - 443:443
    restart: always
  nginx-http:
    image: nginx:1.17.9
    container_name: nginx-http
    volumes:
      - ./nginx-http/tmpl:/etc/nginx/tmpl
      - ./nginx-http/conf:/etc/nginx/conf.d
      - ./certbot/data/www:/var/www/certbot
    environment:
      - NGINX_FQDN=${NGINX_FQDN}
      - HTTPS_COMMON_NAME=${HTTPS_COMMON_NAME}
    command: /bin/bash -c "envsubst < /etc/nginx/tmpl/grafana.conf.tmpl > /etc/nginx/conf.d/grafana.conf && exec nginx -g 'daemon off;'"
    ports:
      - 80:80
    depends_on: 
      - grafana
    restart: always
  certbot:
    image: certbot/certbot
    environment:
      - NGINX_FQDN=${NGINX_FQDN}
      - HTTPS_EMAIL=${HTTPS_EMAIL}
      - HTTPS_COMMON_NAME=${HTTPS_COMMON_NAME}
    depends_on: 
      - nginx-http
    volumes:
      - ./certbot/data/conf:/etc/letsencrypt
      - ./certbot/data/www:/var/www/certbot
      - ./certbot/data/logs:/var/log/letsencrypt
    #entrypoint: /bin/sh -c "certbot certonly --standalone -n --agree-tos --email ${HTTPS_EMAIL} -d ${NGINX_FQDN}"
    entrypoint: /bin/sh -c "certbot certonly --webroot -w /var/www/certbot -n --agree-tos --email ${HTTPS_EMAIL} -d ${NGINX_FQDN}"
  
    

